// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using src.Context;

#nullable disable

namespace prova.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20240320160740_UpdateTables")]
    partial class UpdateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("src.Models.BudgetPart", b =>
                {
                    b.Property<int>("BudgetPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BudgetPartId"));

                    b.Property<int>("EstimateId")
                        .HasColumnType("integer");

                    b.Property<int>("PieceId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("BudgetPartId");

                    b.HasIndex("EstimateId");

                    b.HasIndex("PieceId");

                    b.ToTable("BudgetParts");
                });

            modelBuilder.Entity("src.Models.Estimate", b =>
                {
                    b.Property<int>("EstimateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EstimateId"));

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<string>("Plate")
                        .HasColumnType("text");

                    b.HasKey("EstimateId");

                    b.ToTable("Estimates");
                });

            modelBuilder.Entity("src.Models.Piece", b =>
                {
                    b.Property<int>("PieceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PieceId"));

                    b.Property<string>("NamePiece")
                        .HasColumnType("text");

                    b.Property<int>("Store")
                        .HasColumnType("integer");

                    b.HasKey("PieceId");

                    b.ToTable("Pieces");
                });

            modelBuilder.Entity("src.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShiftId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MovimentType")
                        .HasColumnType("integer");

                    b.Property<int>("PieceId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("ShiftId");

                    b.HasIndex("PieceId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("src.Models.BudgetPart", b =>
                {
                    b.HasOne("src.Models.Estimate", "Estimate")
                        .WithMany("BudgetParts")
                        .HasForeignKey("EstimateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("src.Models.Piece", "Piece")
                        .WithMany("BudgetParts")
                        .HasForeignKey("PieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estimate");

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("src.Models.Shift", b =>
                {
                    b.HasOne("src.Models.Piece", "Piece")
                        .WithMany("Shifts")
                        .HasForeignKey("PieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Piece");
                });

            modelBuilder.Entity("src.Models.Estimate", b =>
                {
                    b.Navigation("BudgetParts");
                });

            modelBuilder.Entity("src.Models.Piece", b =>
                {
                    b.Navigation("BudgetParts");

                    b.Navigation("Shifts");
                });
#pragma warning restore 612, 618
        }
    }
}
